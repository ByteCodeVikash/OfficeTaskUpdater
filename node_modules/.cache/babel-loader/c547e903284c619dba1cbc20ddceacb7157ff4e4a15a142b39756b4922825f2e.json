{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Teams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    author: 'Sharon S',\n    content: 'How are the designs coming along?',\n    type: 'received'\n  }, {\n    id: 2,\n    author: 'Rishi K',\n    content: 'Good!',\n    type: 'received'\n  }, {\n    id: 3,\n    author: 'You',\n    content: \"It's deployed and available for verification\",\n    type: 'sent'\n  }, {\n    id: 4,\n    author: 'Anjali Kumar',\n    content: 'Please go through all files before submissions',\n    type: 'received'\n  }]);\n  const [files, setFiles] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const handleSend = () => {\n    if (newMessage.trim() !== '') {\n      const nextId = messages.length + 1;\n      setMessages([...messages, {\n        id: nextId,\n        author: 'You',\n        content: newMessage,\n        type: 'sent'\n      }]);\n      setNewMessage('');\n    }\n  };\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    const fileList = Array.from(uploadedFiles).map(file => ({\n      name: file.name,\n      size: file.size\n    }));\n    setFiles(files.concat(fileList));\n  };\n  const handleReply = messageId => {\n    // Here, you can set the message to be replied to in the state and open a modal or set the input to reply mode\n    // For simplicity, we're just logging the reply action to the console\n    console.log('Replying to message ID:', messageId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab active\",\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab\",\n        onClick: () => document.getElementById('fileUpload').click(),\n        children: \"Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileUpload\",\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initials\",\n          children: message.author.split(' ').map(name => name[0]).join('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), message.type === 'received' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reply-btn\",\n          onClick: () => handleReply(message.id),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 45\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-list\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [file.name, \" (\", Math.round(file.size / 1024), \" KB)\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"type something ...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"7/qJVScwbc1bp72d+eIVED/qblk=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Teams","_s","messages","setMessages","id","author","content","type","files","setFiles","newMessage","setNewMessage","handleSend","trim","nextId","length","handleFileUpload","event","uploadedFiles","target","fileList","Array","from","map","file","name","size","concat","handleReply","messageId","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","getElementById","click","multiple","onChange","style","display","message","split","join","index","Math","round","placeholder","value","e","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Teams.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Teams.css';\r\n\r\nconst Teams = () => {\r\n  const [messages, setMessages] = useState([\r\n    { id: 1, author: 'Sharon S', content: 'How are the designs coming along?', type: 'received' },\r\n    { id: 2, author: 'Rishi K', content: 'Good!', type: 'received' },\r\n    { id: 3, author: 'You', content: \"It's deployed and available for verification\", type: 'sent' },\r\n    { id: 4, author: 'Anjali Kumar', content: 'Please go through all files before submissions', type: 'received' },\r\n  ]);\r\n  const [files, setFiles] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const handleSend = () => {\r\n    if (newMessage.trim() !== '') {\r\n      const nextId = messages.length + 1;\r\n      setMessages([...messages, { id: nextId, author: 'You', content: newMessage, type: 'sent' }]);\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const uploadedFiles = event.target.files;\r\n    const fileList = Array.from(uploadedFiles).map((file) => ({\r\n      name: file.name,\r\n      size: file.size,\r\n    }));\r\n    setFiles(files.concat(fileList));\r\n  };\r\n\r\n  const handleReply = (messageId) => {\r\n    // Here, you can set the message to be replied to in the state and open a modal or set the input to reply mode\r\n    // For simplicity, we're just logging the reply action to the console\r\n    console.log('Replying to message ID:', messageId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"tabs\">\r\n        <div className=\"tab active\">Chats</div>\r\n        <div className=\"tab\" onClick={() => document.getElementById('fileUpload').click()}>Files</div>\r\n        <input id=\"fileUpload\" type=\"file\" multiple onChange={handleFileUpload} style={{ display: 'none' }} />\r\n      </div>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message) => (\r\n          <div key={message.id} className={`message ${message.type}`}>\r\n            <div className=\"initials\">{message.author.split(' ').map((name) => name[0]).join('')}</div>\r\n            <div className=\"text\">{message.content}</div>\r\n            {message.type === 'received' && <button className=\"reply-btn\" onClick={() => handleReply(message.id)}>Reply</button>}\r\n          </div>\r\n        ))}\r\n        <div className=\"files-list\">\r\n          {files.map((file, index) => (\r\n            <div key={index} className=\"file-item\">\r\n              {file.name} ({Math.round(file.size / 1024)} KB)\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input type=\"text\" placeholder=\"type something ...\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} />\r\n        <button className=\"send-btn\" onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}