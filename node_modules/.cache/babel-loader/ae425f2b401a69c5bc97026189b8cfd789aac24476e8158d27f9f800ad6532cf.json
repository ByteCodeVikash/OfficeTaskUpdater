{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Teams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Fetch messages when the component mounts\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/getMessages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMessages(data);\n      } catch (error) {\n        console.error(\"Could not fetch messages:\", error);\n      }\n    };\n    fetchMessages();\n  }, []);\n  const handleSend = async () => {\n    if (newMessage.trim() !== '' || files.length > 0) {\n      const fileAttachments = files.map(file => ({\n        name: file.name,\n        size: file.size,\n        url: file.url // Make sure this is the correct URL that the server can handle\n      }));\n      const messageData = {\n        author: 'You',\n        content: newMessage,\n        files: fileAttachments,\n        // Include file details\n        type: 'sent'\n      };\n      try {\n        const response = await fetch('http://localhost:3001/storeMessage', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageData)\n        });\n        const result = await response.json();\n        if (response.ok) {\n          // Add the new message to the local state\n          setMessages(prevMessages => [...prevMessages, result]); // Assuming the server sends back the stored message\n          setNewMessage('');\n          setFiles([]); // Clear files after sending\n        } else {\n          throw new Error(result.message);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    const fileList = Array.from(uploadedFiles).map(file => ({\n      name: file.name,\n      size: file.size,\n      url: URL.createObjectURL(file) // This URL is for local representation only, not for server storage\n    }));\n    setFiles([...files, ...fileList]);\n  };\n  const handleReply = author => {\n    setNewMessage(`Replying to ${author}: `);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initials\",\n          children: message.author.split(' ').map(name => name[0]).join('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), message.files && message.files.map((file, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [file.name, \" - \", Math.round(file.size / 1024), \" KB\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: file.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            download: true,\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, fileIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)), message.type === 'received' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reply-btn\",\n          onClick: () => handleReply(message.author),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"pcNPz0Wd2NrLnpd9w9wlt8/PKaw=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Teams","_s","messages","setMessages","files","setFiles","newMessage","setNewMessage","fetchMessages","response","fetch","ok","Error","status","data","json","error","console","handleSend","trim","length","fileAttachments","map","file","name","size","url","messageData","author","content","type","method","headers","body","JSON","stringify","result","prevMessages","message","handleFileUpload","event","uploadedFiles","target","fileList","Array","from","URL","createObjectURL","handleReply","className","children","index","split","join","fileName","_jsxFileName","lineNumber","columnNumber","fileIndex","Math","round","href","rel","download","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Teams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Teams.css';\r\n\r\nconst Teams = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch messages when the component mounts\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/getMessages');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setMessages(data);\r\n      } catch (error) {\r\n        console.error(\"Could not fetch messages:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const handleSend = async () => {\r\n    if (newMessage.trim() !== '' || files.length > 0) {\r\n      const fileAttachments = files.map(file => ({\r\n        name: file.name,\r\n        size: file.size,\r\n        url: file.url // Make sure this is the correct URL that the server can handle\r\n      }));\r\n\r\n      const messageData = {\r\n        author: 'You',\r\n        content: newMessage,\r\n        files: fileAttachments, // Include file details\r\n        type: 'sent'\r\n      };\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:3001/storeMessage', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(messageData),\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (response.ok) {\r\n          // Add the new message to the local state\r\n          setMessages(prevMessages => [...prevMessages, result]); // Assuming the server sends back the stored message\r\n          setNewMessage('');\r\n          setFiles([]); // Clear files after sending\r\n        } else {\r\n          throw new Error(result.message);\r\n        }\r\n      } catch (error) {\r\n          console.error('Error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const uploadedFiles = event.target.files;\r\n    const fileList = Array.from(uploadedFiles).map((file) => ({\r\n      name: file.name,\r\n      size: file.size,\r\n      url: URL.createObjectURL(file), // This URL is for local representation only, not for server storage\r\n    }));\r\n    setFiles([...files, ...fileList]);\r\n  };\r\n\r\n  const handleReply = (author) => {\r\n    setNewMessage(`Replying to ${author}: `);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* ...rest of your component */}\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.type}`}>\r\n            <div className=\"initials\">{message.author.split(' ').map((name) => name[0]).join('')}</div>\r\n            <div className=\"text\">{message.content}</div>\r\n            {/* If there are files, list them */}\r\n            {message.files && message.files.map((file, fileIndex) => (\r\n              <div key={fileIndex} className=\"file-item\">\r\n                {file.name} - {Math.round(file.size / 1024)} KB\r\n                <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                  Open\r\n                </a>\r\n              </div>\r\n            ))}\r\n            {message.type === 'received' && (\r\n              <button className=\"reply-btn\" onClick={() => handleReply(message.author)}>Reply</button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* ...rest of your component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}