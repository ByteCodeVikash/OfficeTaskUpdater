{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Teams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [messages, setMessages] = useState([\n    // ... your initial message objects\n  ]);\n  const [files, setFiles] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const handleSend = () => {\n    if (newMessage.trim() !== '') {\n      const nextId = messages.length + 1;\n      setMessages([...messages, {\n        id: nextId,\n        author: 'You',\n        content: newMessage,\n        type: 'sent'\n      }]);\n      setNewMessage('');\n    }\n  };\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    const fileList = Array.from(uploadedFiles).map(file => ({\n      name: file.name,\n      size: file.size,\n      url: URL.createObjectURL(file)\n    }));\n    setFiles([...files, ...fileList]);\n\n    // For each uploaded file, create a message in the chat\n    fileList.forEach(file => {\n      const nextId = messages.length + 1;\n      setMessages([...messages, {\n        id: nextId,\n        author: 'You',\n        content: `Uploaded ${file.name}`,\n        type: 'sent',\n        isFile: true,\n        fileUrl: file.url\n      }]);\n    });\n  };\n\n  // Function to handle typing in the input field\n  const handleInputChange = e => {\n    setNewMessage(e.target.value);\n  };\n\n  // Function to handle key press in the input field\n  const handleInputKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: message.isFile ?\n        /*#__PURE__*/\n        // If it's a file message, render an anchor tag for download\n        _jsxDEV(\"a\", {\n          href: message.fileUrl,\n          download: true,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // Otherwise, render the message text\n        _jsxDEV(\"span\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type something ...\",\n        value: newMessage,\n        onChange: handleInputChange,\n        onKeyPress: handleInputKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileUpload\",\n      multiple: true,\n      onChange: handleFileUpload,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"SZxwOOnFZuVSusnF80twweNjjzM=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Teams","_s","messages","setMessages","files","setFiles","newMessage","setNewMessage","handleSend","trim","nextId","length","id","author","content","type","handleFileUpload","event","uploadedFiles","target","fileList","Array","from","map","file","name","size","url","URL","createObjectURL","forEach","isFile","fileUrl","handleInputChange","e","value","handleInputKeyPress","key","className","children","message","href","download","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onKeyPress","onClick","multiple","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Teams.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Teams.css';\r\n\r\nconst Teams = () => {\r\n  const [messages, setMessages] = useState([\r\n    // ... your initial message objects\r\n  ]);\r\n  const [files, setFiles] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const handleSend = () => {\r\n    if (newMessage.trim() !== '') {\r\n      const nextId = messages.length + 1;\r\n      setMessages([\r\n        ...messages,\r\n        {\r\n          id: nextId,\r\n          author: 'You',\r\n          content: newMessage,\r\n          type: 'sent',\r\n        },\r\n      ]);\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const uploadedFiles = event.target.files;\r\n    const fileList = Array.from(uploadedFiles).map((file) => ({\r\n      name: file.name,\r\n      size: file.size,\r\n      url: URL.createObjectURL(file),\r\n    }));\r\n\r\n    setFiles([...files, ...fileList]);\r\n\r\n    // For each uploaded file, create a message in the chat\r\n    fileList.forEach((file) => {\r\n      const nextId = messages.length + 1;\r\n      setMessages([\r\n        ...messages,\r\n        {\r\n          id: nextId,\r\n          author: 'You',\r\n          content: `Uploaded ${file.name}`,\r\n          type: 'sent',\r\n          isFile: true,\r\n          fileUrl: file.url,\r\n        },\r\n      ]);\r\n    });\r\n  };\r\n\r\n  // Function to handle typing in the input field\r\n  const handleInputChange = (e) => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n\r\n  // Function to handle key press in the input field\r\n  const handleInputKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Rest of the JSX */}\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message) => (\r\n          <div key={message.id} className={`message ${message.type}`}>\r\n            {/* Conditional rendering for file or text message */}\r\n            {message.isFile ? (\r\n              // If it's a file message, render an anchor tag for download\r\n              <a href={message.fileUrl} download>{message.content}</a>\r\n            ) : (\r\n              // Otherwise, render the message text\r\n              <span>{message.content}</span>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type something ...\"\r\n          value={newMessage}\r\n          onChange={handleInputChange}\r\n          onKeyPress={handleInputKeyPress}\r\n        />\r\n        <button className=\"send-btn\" onClick={handleSend}>Send</button>\r\n      </div>\r\n      {/* File input for uploading files */}\r\n      <input\r\n        type=\"file\"\r\n        id=\"fileUpload\"\r\n        multiple\r\n        onChange={handleFileUpload}\r\n        style={{ display: 'none' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}