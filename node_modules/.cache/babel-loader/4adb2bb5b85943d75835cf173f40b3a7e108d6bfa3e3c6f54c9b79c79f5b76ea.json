{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Teams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Fetch messages from server\n  const fetchMessages = () => {\n    fetch('http://localhost:3001/getMessages').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(fetchedMessages => {\n      setMessages(fetchedMessages);\n    }).catch(error => {\n      console.error('Error fetching messages:', error);\n    });\n  };\n\n  // Call fetchMessages when component mounts\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  // Send new message to server\n  const handleSend = () => {\n    if (!newMessage.trim() && files.length === 0) {\n      return;\n    }\n    const messageData = {\n      author: 'You',\n      content: newMessage,\n      files: files.map(file => ({\n        name: file.name,\n        size: file.size,\n        url: file.url\n      })),\n      type: 'sent'\n    };\n    fetch('http://localhost:3001/storeMessage', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(messageData)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      fetchMessages();\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    setNewMessage('');\n    setFiles([]);\n  };\n\n  // Handle file selection\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    const newFiles = Array.from(uploadedFiles).map(file => ({\n      name: file.name,\n      size: file.size,\n      url: URL.createObjectURL(file)\n    }));\n    setFiles(newFiles);\n  };\n\n  // JSX for component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`\n      }, `${message.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn\",\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn\",\n        children: \"I\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn\",\n        onClick: () => document.getElementById('fileUpload').click(),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileUpload\",\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"message-input\",\n        placeholder: \"Jot something down\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"pcNPz0Wd2NrLnpd9w9wlt8/PKaw=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Teams","_s","messages","setMessages","files","setFiles","newMessage","setNewMessage","fetchMessages","fetch","then","response","ok","Error","json","fetchedMessages","catch","error","console","handleSend","trim","length","messageData","author","content","map","file","name","size","url","type","method","headers","body","JSON","stringify","data","log","handleFileUpload","event","uploadedFiles","target","newFiles","Array","from","URL","createObjectURL","className","children","message","index","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","getElementById","click","multiple","onChange","style","display","placeholder","value","e","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Teams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Teams.css';\r\n\r\nconst Teams = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  // Fetch messages from server\r\n  const fetchMessages = () => {\r\n    fetch('http://localhost:3001/getMessages')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((fetchedMessages) => {\r\n        setMessages(fetchedMessages);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching messages:', error);\r\n      });\r\n  };\r\n\r\n  // Call fetchMessages when component mounts\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  // Send new message to server\r\n  const handleSend = () => {\r\n    if (!newMessage.trim() && files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const messageData = {\r\n      author: 'You',\r\n      content: newMessage,\r\n      files: files.map((file) => ({\r\n        name: file.name,\r\n        size: file.size,\r\n        url: file.url,\r\n      })),\r\n      type: 'sent',\r\n    };\r\n\r\n    fetch('http://localhost:3001/storeMessage', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(messageData),\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log('Success:', data);\r\n      fetchMessages();\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n\r\n    setNewMessage('');\r\n    setFiles([]);\r\n  };\r\n\r\n  // Handle file selection\r\n  const handleFileUpload = (event) => {\r\n    const uploadedFiles = event.target.files;\r\n    const newFiles = Array.from(uploadedFiles).map((file) => ({\r\n      name: file.name,\r\n      size: file.size,\r\n      url: URL.createObjectURL(file),\r\n    }));\r\n\r\n    setFiles(newFiles);\r\n  };\r\n\r\n  // JSX for component\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Chat messages */}\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={`${message.id}-${index}`} className={`message ${message.type}`}>\r\n            {/* Message content */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Editor toolbar */}\r\n      <div className=\"editor-toolbar\">\r\n        <button className=\"toolbar-btn\">B</button>\r\n        <button className=\"toolbar-btn\">I</button>\r\n        {/* The rest of your buttons */}\r\n        <button \r\n          className=\"toolbar-btn\" \r\n          onClick={() => document.getElementById('fileUpload').click()}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      {/* Message input container */}\r\n      <div className=\"chat-input-container\">\r\n        <input\r\n          id=\"fileUpload\"\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleFileUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"message-input\"\r\n          placeholder=\"Jot something down\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n        />\r\n        <button \r\n          className=\"send-btn\" \r\n          onClick={handleSend}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}