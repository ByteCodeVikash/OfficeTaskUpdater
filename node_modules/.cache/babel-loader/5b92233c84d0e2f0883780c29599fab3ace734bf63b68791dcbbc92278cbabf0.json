{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Teams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const fetchMessages = () => {\n    fetch('http://localhost:3001/getMessages').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(fetchedMessages => {\n      setMessages(fetchedMessages);\n    }).catch(error => {\n      console.error('Error fetching messages:', error);\n    });\n  };\n  useEffect(() => {\n    // Immediately fetch messages when the component mounts\n    const fetchMessages = () => {\n      fetch('http://localhost:3001/getMessages').then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(fetchedMessages => {\n        setMessages(fetchedMessages);\n      }).catch(error => {\n        console.error('Error fetching messages:', error);\n      });\n    };\n    fetchMessages();\n  }, []);\n  const handleSend = () => {\n    if (!newMessage.trim() && files.length === 0) {\n      return;\n    }\n\n    // Construct a new message object\n    const messageData = {\n      // The server would typically assign an ID\n      author: 'You',\n      content: newMessage,\n      files: files.map(file => ({\n        name: file.name,\n        size: file.size,\n        url: file.url // This URL is created locally for preview purposes\n      })),\n      type: 'sent'\n    };\n\n    // Send the message data to the server\n    fetch('http://localhost:3001/storeMessage', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(messageData)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      fetchMessages(); // Re-fetch messages to update the UI\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    setNewMessage(''); // Reset the input field\n    setFiles([]); // Clear the files\n  };\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    const newFiles = Array.from(uploadedFiles).map(file => ({\n      name: file.name,\n      size: file.size,\n      url: URL.createObjectURL(file)\n    }));\n    setFiles(newFiles);\n  };\n\n  // Render the messages, handling files separately\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initials\",\n          children: message.author.split(' ').map(name => name[0]).join('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [message.content, message.files && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"files-list\",\n            children: message.files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-item\",\n              children: [file.name, \" - \", Math.round(file.size / 1024), \" KB\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: file.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                download: true,\n                children: \"Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type something...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"fileUpload\",\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileUpload,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => document.getElementById('fileUpload').click(),\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"pcNPz0Wd2NrLnpd9w9wlt8/PKaw=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Teams","_s","messages","setMessages","files","setFiles","newMessage","setNewMessage","fetchMessages","fetch","then","response","ok","Error","json","fetchedMessages","catch","error","console","handleSend","trim","length","messageData","author","content","map","file","name","size","url","type","method","headers","body","JSON","stringify","data","log","handleFileUpload","event","uploadedFiles","target","newFiles","Array","from","URL","createObjectURL","className","children","message","split","join","fileName","_jsxFileName","lineNumber","columnNumber","index","Math","round","href","rel","download","id","placeholder","value","onChange","e","onKeyPress","key","onClick","multiple","style","display","document","getElementById","click","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Teams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Teams.css';\r\n\r\nconst Teams = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const fetchMessages = () => {\r\n    fetch('http://localhost:3001/getMessages')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((fetchedMessages) => {\r\n        setMessages(fetchedMessages);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching messages:', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Immediately fetch messages when the component mounts\r\n    const fetchMessages = () => {\r\n      fetch('http://localhost:3001/getMessages')\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((fetchedMessages) => {\r\n          setMessages(fetchedMessages);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching messages:', error);\r\n        });\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const handleSend = () => {\r\n    if (!newMessage.trim() && files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Construct a new message object\r\n    const messageData = {\r\n      // The server would typically assign an ID\r\n      author: 'You',\r\n      content: newMessage,\r\n      files: files.map(file => ({\r\n        name: file.name,\r\n        size: file.size,\r\n        url: file.url, // This URL is created locally for preview purposes\r\n      })),\r\n      type: 'sent',\r\n    };\r\n\r\n    // Send the message data to the server\r\n    fetch('http://localhost:3001/storeMessage', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(messageData),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('Success:', data);\r\n      fetchMessages(); // Re-fetch messages to update the UI\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n\r\n    setNewMessage(''); // Reset the input field\r\n    setFiles([]); // Clear the files\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const uploadedFiles = event.target.files;\r\n    const newFiles = Array.from(uploadedFiles).map(file => ({\r\n      name: file.name,\r\n      size: file.size,\r\n      url: URL.createObjectURL(file),\r\n    }));\r\n\r\n    setFiles(newFiles);\r\n  };\r\n\r\n  // Render the messages, handling files separately\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Render messages */}\r\n      <div className=\"chat-messages\">\r\n      {\r\n  messages.map((message) => (\r\n    <div key={message.id} className={`message ${message.type}`}>\r\n      <div className=\"initials\">\r\n        {message.author.split(' ').map((name) => name[0]).join('')}\r\n      </div>\r\n      <div className=\"text\">\r\n        {message.content}\r\n        {message.files && (\r\n          <div className=\"files-list\">\r\n            {message.files.map((file, index) => (\r\n              <div key={index} className=\"file-item\">\r\n                {file.name} - {Math.round(file.size / 1024)} KB\r\n                <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                  Open\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  ))\r\n}\r\n\r\n      </div>\r\n      {/* Input for typing a new message */}\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type something...\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n        />\r\n        <button className=\"send-btn\" onClick={handleSend}>Send</button>\r\n      </div>\r\n      {/* File upload input */}\r\n      <input\r\n        id=\"fileUpload\"\r\n        type=\"file\"\r\n        multiple\r\n        onChange={handleFileUpload}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {/* Button to trigger file upload */}\r\n      <button onClick={() => document.getElementById('fileUpload').click()}>\r\n        Upload File\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}