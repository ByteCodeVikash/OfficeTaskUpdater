{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Tasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  id: 1,\n  name: 'Marketing strategy',\n  status: 'In progress',\n  dueDate: '4 d',\n  remaining: '-04:00'\n}, {\n  id: 2,\n  name: 'New contract template',\n  status: 'Needs review',\n  dueDate: 'Tomorrow',\n  remaining: '-03:30'\n}, {\n  id: 3,\n  name: 'New estimation for Fineline Inc. project',\n  status: 'Needs attention',\n  dueDate: 'Sat, 12/12',\n  remaining: '00:00'\n}, {\n  id: 4,\n  name: 'Quarter budget analysis',\n  status: 'Needs input',\n  dueDate: 'Sat, 19/12',\n  remaining: '00:00'\n}, {\n  id: 5,\n  name: 'Launch marketing campaign',\n  status: 'In progress',\n  dueDate: 'Mon, 11/01/2021',\n  remaining: '00:00'\n}, {\n  id: 6,\n  name: 'Planning and data collection',\n  status: 'Planned',\n  dueDate: '3:20',\n  remaining: '+01:10'\n}];\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const toggleStatus = taskId => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          status: task.status === 'Completed' ? 'In progress' : 'Completed'\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"High Priority\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `task-${task.id}`,\n            checked: task.status === 'Completed',\n            onChange: () => toggleStatus(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `task-${task.id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-info ${task.status.replace(/\\s+/g, '-').toLowerCase()}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-name\",\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-status\",\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-dueDate\",\n            children: task.dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-remaining\",\n            children: task.remaining\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"SvIK8d5WT9y/c+LCOG3LNPDmSmQ=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialTasks","id","name","status","dueDate","remaining","Tasks","_s","tasks","setTasks","toggleStatus","taskId","updatedTasks","map","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","htmlFor","replace","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Tasks.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Tasks.css';\r\n\r\nconst initialTasks = [\r\n  { id: 1, name: 'Marketing strategy', status: 'In progress', dueDate: '4 d', remaining: '-04:00' },\r\n  { id: 2, name: 'New contract template', status: 'Needs review', dueDate: 'Tomorrow', remaining: '-03:30' },\r\n  { id: 3, name: 'New estimation for Fineline Inc. project', status: 'Needs attention', dueDate: 'Sat, 12/12', remaining: '00:00' },\r\n  { id: 4, name: 'Quarter budget analysis', status: 'Needs input', dueDate: 'Sat, 19/12', remaining: '00:00' },\r\n  { id: 5, name: 'Launch marketing campaign', status: 'In progress', dueDate: 'Mon, 11/01/2021', remaining: '00:00' },\r\n  { id: 6, name: 'Planning and data collection', status: 'Planned', dueDate: '3:20', remaining: '+01:10' }\r\n];\r\n\r\nconst Tasks = () => {\r\n  const [tasks, setTasks] = useState(initialTasks);\r\n\r\n  const toggleStatus = (taskId) => {\r\n    const updatedTasks = tasks.map(task => {\r\n      if (task.id === taskId) {\r\n        return { ...task, status: task.status === 'Completed' ? 'In progress' : 'Completed' };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-container\">\r\n      <h1>High Priority</h1>\r\n      <div className=\"task-list\">\r\n        {tasks.map(task => (\r\n          <div key={task.id} className=\"task-item\">\r\n            <div className=\"checkbox-container\">\r\n              <input type=\"checkbox\" id={`task-${task.id}`} checked={task.status === 'Completed'} onChange={() => toggleStatus(task.id)} />\r\n              <label htmlFor={`task-${task.id}`}></label>\r\n            </div>\r\n            <div className={`task-info ${task.status.replace(/\\s+/g, '-').toLowerCase()}`}>\r\n              <span className=\"task-name\">{task.name}</span>\r\n              <span className=\"task-status\">{task.status}</span>\r\n              <span className=\"task-dueDate\">{task.dueDate}</span>\r\n              <span className=\"task-remaining\">{task.remaining}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}