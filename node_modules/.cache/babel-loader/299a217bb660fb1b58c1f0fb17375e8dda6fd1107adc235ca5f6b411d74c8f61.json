{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Teams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3001/getMessages').then(response => response.json()).then(fetchedMessages => setMessages(fetchedMessages)).catch(error => console.error('Error fetching messages:', error));\n  }, []);\n  const handleSend = () => {\n    if (newMessage.trim() !== '' || files.length > 0) {\n      const messageData = {\n        author: 'You',\n        content: newMessage,\n        files: files.map(file => ({\n          name: file.name,\n          size: file.size\n        })),\n        type: 'sent'\n      };\n\n      // Update the local state before sending to the server\n      setMessages([...messages, messageData]);\n      setNewMessage('');\n      setFiles([]);\n\n      // Send the message data to the server\n      fetch('http://localhost:3001/storeMessage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(messageData)\n      }).then(response => response.json()).then(data => console.log('Success:', data)).catch(error => console.error('Error:', error));\n    }\n  };\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    const fileList = Array.from(uploadedFiles).map(file => ({\n      name: file.name,\n      size: file.size,\n      url: URL.createObjectURL(file)\n    }));\n    setFiles(fileList);\n  };\n  const handleReply = author => {\n    setNewMessage(`Replying to ${author}: `);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initials\",\n          children: message.author.split(' ').map(name => name[0]).join('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [message.content, message.files && message.files.map((file, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-item\",\n            children: [file.name, \" - \", Math.round(file.size / 1024), \" KB\"]\n          }, fileIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"pcNPz0Wd2NrLnpd9w9wlt8/PKaw=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Teams","_s","messages","setMessages","files","setFiles","newMessage","setNewMessage","fetch","then","response","json","fetchedMessages","catch","error","console","handleSend","trim","length","messageData","author","content","map","file","name","size","type","method","headers","body","JSON","stringify","data","log","handleFileUpload","event","uploadedFiles","target","fileList","Array","from","url","URL","createObjectURL","handleReply","className","children","message","index","split","join","fileName","_jsxFileName","lineNumber","columnNumber","fileIndex","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Teams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Teams.css';\r\n\r\nconst Teams = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/getMessages')\r\n      .then(response => response.json())\r\n      .then(fetchedMessages => setMessages(fetchedMessages))\r\n      .catch(error => console.error('Error fetching messages:', error));\r\n  }, []);\r\n\r\n  const handleSend = () => {\r\n    if (newMessage.trim() !== '' || files.length > 0) {\r\n      const messageData = {\r\n        author: 'You',\r\n        content: newMessage,\r\n        files: files.map(file => ({ name: file.name, size: file.size })),\r\n        type: 'sent',\r\n      };\r\n\r\n      // Update the local state before sending to the server\r\n      setMessages([...messages, messageData]);\r\n      setNewMessage('');\r\n      setFiles([]);\r\n\r\n      // Send the message data to the server\r\n      fetch('http://localhost:3001/storeMessage', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(messageData),\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => console.log('Success:', data))\r\n      .catch(error => console.error('Error:', error));\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const uploadedFiles = event.target.files;\r\n    const fileList = Array.from(uploadedFiles).map(file => ({\r\n      name: file.name,\r\n      size: file.size,\r\n      url: URL.createObjectURL(file),\r\n    }));\r\n    setFiles(fileList);\r\n  };\r\n\r\n  const handleReply = (author) => {\r\n    setNewMessage(`Replying to ${author}: `);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* ... other components ... */}\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.type}`}>\r\n            <div className=\"initials\">\r\n              {message.author.split(' ').map(name => name[0]).join('')}\r\n            </div>\r\n            <div className=\"text\">\r\n              {message.content}\r\n              {/* Render files if any */}\r\n              {message.files && message.files.map((file, fileIndex) => (\r\n                <div key={fileIndex} className=\"file-item\">\r\n                  {file.name} - {Math.round(file.size / 1024)} KB\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* ... rest of your component ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}