{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Teams.css';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const handleSend = async () => {\n    if (newMessage.trim() !== '' || files.length > 0) {\n      let messageContent = newMessage;\n      if (files.length > 0) {\n        messageContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: newMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"files-list\",\n            children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-item\",\n              children: [file.name, \" - \", Math.round(file.size / 1024), \" KB\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: file.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                download: true,\n                children: \"Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n        setFiles([]); // Clear files after sending\n      }\n      try {\n        // Send task data to server\n        await axios.post('http://localhost:3001/task', {\n          author: 'You',\n          content: messageContent,\n          type: 'sent'\n        });\n        setNewMessage('');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    const fileList = Array.from(uploadedFiles).map(file => ({\n      name: file.name,\n      size: file.size,\n      url: URL.createObjectURL(file)\n    }));\n    setFiles([...files, ...fileList]);\n  };\n  const handleReply = author => {\n    setNewMessage(`Replying to ${author}: `);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"bfseQuP5C24zV8SfpHF2GghVu/M=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Teams","_s","messages","setMessages","files","setFiles","newMessage","setNewMessage","handleSend","trim","length","messageContent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","file","index","name","Math","round","size","href","url","target","rel","download","post","author","content","type","error","console","handleFileUpload","event","uploadedFiles","fileList","Array","from","URL","createObjectURL","handleReply","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Teams.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Teams.css';\r\nimport axios from 'axios'; // Import axios for making HTTP requests\r\n\r\nconst Teams = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (newMessage.trim() !== '' || files.length > 0) {\r\n      let messageContent = newMessage;\r\n      if (files.length > 0) {\r\n        messageContent = (\r\n          <>\r\n            <p>{newMessage}</p>\r\n            <div className=\"files-list\">\r\n              {files.map((file, index) => (\r\n                <div key={index} className=\"file-item\">\r\n                  {file.name} - {Math.round(file.size / 1024)} KB\r\n                  <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                    Open\r\n                  </a>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        );\r\n        setFiles([]); // Clear files after sending\r\n      }\r\n      try {\r\n        // Send task data to server\r\n        await axios.post('http://localhost:3001/task', {\r\n          author: 'You',\r\n          content: messageContent,\r\n          type: 'sent'\r\n        });\r\n        setNewMessage('');\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const uploadedFiles = event.target.files;\r\n    const fileList = Array.from(uploadedFiles).map((file) => ({\r\n      name: file.name,\r\n      size: file.size,\r\n      url: URL.createObjectURL(file),\r\n    }));\r\n    setFiles([...files, ...fileList]);\r\n  };\r\n\r\n  const handleReply = (author) => {\r\n    setNewMessage(`Replying to ${author}: `);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Remaining JSX for chat UI */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}