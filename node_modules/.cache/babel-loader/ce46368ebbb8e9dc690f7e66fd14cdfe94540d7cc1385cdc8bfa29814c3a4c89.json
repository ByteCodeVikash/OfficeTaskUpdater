{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Teams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [messages, setMessages] = useState([\n    // ... existing messages\n  ]);\n  const [newMessage, setNewMessage] = useState('');\n  const handleSendText = () => {\n    if (newMessage.trim() !== '') {\n      const nextId = messages.length + 1;\n      const newMessageObj = {\n        id: nextId,\n        author: 'You',\n        content: newMessage,\n        type: 'text' // type 'text' for text messages\n      };\n      setMessages([...messages, newMessageObj]);\n      setNewMessage('');\n    }\n  };\n  const handleSendFile = file => {\n    const nextId = messages.length + 1;\n    const newFileMessage = {\n      id: nextId,\n      author: 'You',\n      content: file.name,\n      type: 'file',\n      // type 'file' for file messages\n      url: file.url // We'll use this URL to enable downloading\n    };\n    setMessages([...messages, newFileMessage]);\n  };\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    if (uploadedFiles.length) {\n      const fileList = Array.from(uploadedFiles).map(file => ({\n        name: file.name,\n        size: file.size,\n        url: URL.createObjectURL(file)\n      }));\n      // Assume we send the file to the chat immediately after upload for this example\n      fileList.forEach(handleSendFile);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map(message => {\n        if (message.type === 'text') {\n          // Render text message\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.type}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this);\n        } else if (message.type === 'file') {\n          // Render file message with a download link\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.type}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: message.url,\n                download: true,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"type something ...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: handleSendText,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileUpload\",\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"2IOHj6Mbi7IjGBYiKnYoChXSlxs=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Teams","_s","messages","setMessages","newMessage","setNewMessage","handleSendText","trim","nextId","length","newMessageObj","id","author","content","type","handleSendFile","file","newFileMessage","name","url","handleFileUpload","event","uploadedFiles","target","files","fileList","Array","from","map","size","URL","createObjectURL","forEach","className","children","message","fileName","_jsxFileName","lineNumber","columnNumber","href","download","rel","placeholder","value","onChange","e","onKeyPress","key","onClick","multiple","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Teams.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Teams.css';\r\n\r\nconst Teams = () => {\r\n  const [messages, setMessages] = useState([\r\n    // ... existing messages\r\n  ]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const handleSendText = () => {\r\n    if (newMessage.trim() !== '') {\r\n      const nextId = messages.length + 1;\r\n      const newMessageObj = {\r\n        id: nextId,\r\n        author: 'You',\r\n        content: newMessage,\r\n        type: 'text', // type 'text' for text messages\r\n      };\r\n      setMessages([...messages, newMessageObj]);\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  const handleSendFile = (file) => {\r\n    const nextId = messages.length + 1;\r\n    const newFileMessage = {\r\n      id: nextId,\r\n      author: 'You',\r\n      content: file.name,\r\n      type: 'file', // type 'file' for file messages\r\n      url: file.url, // We'll use this URL to enable downloading\r\n    };\r\n    setMessages([...messages, newFileMessage]);\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const uploadedFiles = event.target.files;\r\n    if (uploadedFiles.length) {\r\n      const fileList = Array.from(uploadedFiles).map((file) => ({\r\n        name: file.name,\r\n        size: file.size,\r\n        url: URL.createObjectURL(file),\r\n      }));\r\n      // Assume we send the file to the chat immediately after upload for this example\r\n      fileList.forEach(handleSendFile);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* ...tabs and chat-messages... */}\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message) => {\r\n          if (message.type === 'text') {\r\n            // Render text message\r\n            return (\r\n              <div key={message.id} className={`message ${message.type}`}>\r\n                <div className=\"text\">{message.content}</div>\r\n              </div>\r\n            );\r\n          } else if (message.type === 'file') {\r\n            // Render file message with a download link\r\n            return (\r\n              <div key={message.id} className={`message ${message.type}`}>\r\n                <div className=\"text\">\r\n                  <a href={message.url} download target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {message.content}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"type something ...\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSendText()}\r\n        />\r\n        <button className=\"send-btn\" onClick={handleSendText}>Send</button>\r\n        <input\r\n          id=\"fileUpload\"\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleFileUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}