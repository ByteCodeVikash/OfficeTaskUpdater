{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupApp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isSignedUp, setIsSignedUp] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [status, setStatus] = useState(''); // Now we'll use status to display messages to the user\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const accountAction = isLogin ? 'login' : 'signup';\n    if (!isLogin && password !== confirmPassword) {\n      setStatus('Passwords do not match.');\n      return;\n    }\n    const url = `http://localhost:3001/${accountAction}`;\n    const body = JSON.stringify({\n      username,\n      password,\n      ...(accountAction === 'signup' && {\n        confirmPassword\n      })\n    });\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: body\n      });\n      const message = await response.text();\n      if (!response.ok) {\n        throw new Error(`${accountAction} failed: ${message}`);\n      }\n      if (isLogin) {\n        setStatus('Login successful!');\n        navigate('/dashboard');\n      } else {\n        setStatus('Signup successful! Please log in.');\n        setIsSignedUp(true); // User has signed up\n        setIsLogin(true); // Show login form next\n      }\n    } catch (error) {\n      setStatus(error.message);\n    }\n  };\n\n  // If user is signed up, but not on login form, show login button\n  if (isSignedUp && isLogin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(true),\n          children: \"Go to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"illustration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signup-form\",\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupApp, \"B+efAqfgswwTCHbTsVQAz+Oanr8=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupApp;\nexport default SignupApp;\nvar _c;\n$RefreshReg$(_c, \"SignupApp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignupApp","_s","navigate","isLogin","setIsLogin","isSignedUp","setIsSignedUp","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","status","setStatus","handleSubmit","event","preventDefault","accountAction","url","body","JSON","stringify","response","fetch","method","headers","message","text","ok","Error","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './login.css';\r\n\r\nconst SignupApp = () => {\r\n  const navigate = useNavigate();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isSignedUp, setIsSignedUp] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [status, setStatus] = useState(''); // Now we'll use status to display messages to the user\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const accountAction = isLogin ? 'login' : 'signup';\r\n\r\n    if (!isLogin && password !== confirmPassword) {\r\n      setStatus('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    const url = `http://localhost:3001/${accountAction}`;\r\n    const body = JSON.stringify({ username, password, ...(accountAction === 'signup' && { confirmPassword }) });\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: body,\r\n      });\r\n\r\n      const message = await response.text();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`${accountAction} failed: ${message}`);\r\n      }\r\n\r\n      if (isLogin) {\r\n        setStatus('Login successful!');\r\n        navigate('/dashboard');\r\n      } else {\r\n        setStatus('Signup successful! Please log in.');\r\n        setIsSignedUp(true); // User has signed up\r\n        setIsLogin(true); // Show login form next\r\n      }\r\n    } catch (error) {\r\n      setStatus(error.message);\r\n    }\r\n  };\r\n\r\n  // If user is signed up, but not on login form, show login button\r\n  if (isSignedUp && isLogin) {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"status-message\">\r\n          <p>{status}</p>\r\n          <button onClick={() => setIsLogin(true)}>Go to Login</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"illustration\" />\r\n      <div className=\"form-container\">\r\n        <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n          {/* Form inputs and buttons */}\r\n        </form>\r\n        {status && <p className=\"status-message\">{status}</p>} {/* Status message displayed here */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}