{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupApp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(true); // State to toggle between login and signup\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(''); // For signup confirmation password\n  const [status, setStatus] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!isLogin && password !== confirmPassword) {\n      setStatus('Passwords do not match.');\n      return;\n    }\n    const endpoint = isLogin ? 'login' : 'signup';\n    const url = `http://localhost:3001/${endpoint}`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`${endpoint} failed: ${response.statusText}`);\n      }\n      if (isLogin) {\n        setStatus('Login successful!');\n        navigate('/dashboard'); // Redirect to dashboard after login\n      } else {\n        setStatus('Signup successful! Please log in.');\n        setIsLogin(true); // Switch to login form after successful signup\n      }\n    } catch (error) {\n      setStatus(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"illustration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signup-form\",\n        onSubmit: handleSubmit,\n        children: [!isLogin &&\n        /*#__PURE__*/\n        // Confirm password field only for signup\n        _jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"CONFIRM PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? 'LOG IN' : 'SIGN UP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"toggle-btn\",\n          onClick: () => {\n            setIsLogin(!isLogin); // Toggle between login and signup\n            setStatus('');\n          },\n          children: isLogin ? 'Create a new account' : 'Already have an account? Log in'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupApp, \"QJUmmExwdoBDKcH+kLMFvy+LHR8=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupApp;\nexport default SignupApp;\nvar _c;\n$RefreshReg$(_c, \"SignupApp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignupApp","_s","navigate","isLogin","setIsLogin","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","status","setStatus","handleSubmit","event","preventDefault","endpoint","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './login.css';\r\n\r\nconst SignupApp = () => {\r\n  const navigate = useNavigate();\r\n  const [isLogin, setIsLogin] = useState(true); // State to toggle between login and signup\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState(''); // For signup confirmation password\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!isLogin && password !== confirmPassword) {\r\n      setStatus('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    const endpoint = isLogin ? 'login' : 'signup';\r\n    const url = `http://localhost:3001/${endpoint}`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`${endpoint} failed: ${response.statusText}`);\r\n      }\r\n\r\n      if (isLogin) {\r\n        setStatus('Login successful!');\r\n        navigate('/dashboard'); // Redirect to dashboard after login\r\n      } else {\r\n        setStatus('Signup successful! Please log in.');\r\n        setIsLogin(true); // Switch to login form after successful signup\r\n      }\r\n    } catch (error) {\r\n      setStatus(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"illustration\" />\r\n      <div className=\"form-container\">\r\n        <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n          {/* ... username and password fields ... */}\r\n          {!isLogin && (\r\n            // Confirm password field only for signup\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"confirmPassword\">CONFIRM PASSWORD</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          <button type=\"submit\">{isLogin ? 'LOG IN' : 'SIGN UP'}</button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"toggle-btn\" \r\n            onClick={() => {\r\n              setIsLogin(!isLogin); // Toggle between login and signup\r\n              setStatus('');\r\n            }}\r\n          >\r\n            {isLogin ? 'Create a new account' : 'Already have an account? Log in'}\r\n          </button>\r\n        </form>\r\n        {status && <p className=\"status-message\">{status}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}