{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash\\\\OneDrive\\\\Desktop\\\\task_manger\\\\my-react-app\\\\src\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Tasks.css';\n// Import date-fns or a similar library if needed to handle dates and times more effectively.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasksData = [\n  // Your initial tasks data...\n];\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState(tasksData);\n  const toggleTaskCompleted = taskId => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"High Priority\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task ${task.completed ? 'completed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleTaskCompleted(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-name\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-progress-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-progress-bar ${task.status}`,\n          style: {\n            width: task.progress + '%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-due-date\",\n        children: task.dueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-remaining\",\n        children: task.remaining\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"9eCIs32UyKGxrqBhUP5cX9x+EWA=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","tasksData","Tasks","_s","tasks","setTasks","toggleTaskCompleted","taskId","map","task","id","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","name","status","style","width","progress","dueDate","remaining","_c","$RefreshReg$"],"sources":["C:/Users/Vikash/OneDrive/Desktop/task_manger/my-react-app/src/Tasks.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Tasks.css';\r\n// Import date-fns or a similar library if needed to handle dates and times more effectively.\r\n\r\nconst tasksData = [\r\n  // Your initial tasks data...\r\n];\r\n\r\nconst Tasks = () => {\r\n  const [tasks, setTasks] = useState(tasksData);\r\n\r\n  const toggleTaskCompleted = (taskId) => {\r\n    setTasks(tasks.map(task => {\r\n      if (task.id === taskId) {\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-container\">\r\n      <h1>High Priority</h1>\r\n      {tasks.map(task => (\r\n        <div key={task.id} className={`task ${task.completed ? 'completed' : ''}`}>\r\n          <div className=\"task-details\">\r\n            <input type=\"checkbox\" checked={task.completed} onChange={() => toggleTaskCompleted(task.id)} />\r\n            <div className=\"task-name\">{task.name}</div>\r\n          </div>\r\n          <div className=\"task-progress-container\">\r\n            <div className={`task-progress-bar ${task.status}`} style={{ width: task.progress + '%' }}></div>\r\n          </div>\r\n          <div className=\"task-due-date\">{task.dueDate}</div>\r\n          <div className=\"task-remaining\">{task.remaining}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAG;EAChB;AAAA,CACD;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACG,SAAS,CAAC;EAE7C,MAAMK,mBAAmB,GAAIC,MAAM,IAAK;IACtCF,QAAQ,CAACD,KAAK,CAACI,GAAG,CAACC,IAAI,IAAI;MACzB,IAAIA,IAAI,CAACC,EAAE,KAAKH,MAAM,EAAE;QACtB,OAAO;UAAE,GAAGE,IAAI;UAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;QAAU,CAAC;MAChD;MACA,OAAOF,IAAI;IACb,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBb,KAAK,CAACI,GAAG,CAACC,IAAI,iBACbT,OAAA;MAAmBY,SAAS,EAAG,QAAOH,IAAI,CAACE,SAAS,GAAG,WAAW,GAAG,EAAG,EAAE;MAAAE,QAAA,gBACxEb,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3Bb,OAAA;UAAOkB,IAAI,EAAC,UAAU;UAACC,OAAO,EAAEV,IAAI,CAACE,SAAU;UAACS,QAAQ,EAAEA,CAAA,KAAMd,mBAAmB,CAACG,IAAI,CAACC,EAAE;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChGjB,OAAA;UAAKY,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEJ,IAAI,CAACY;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACNjB,OAAA;QAAKY,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtCb,OAAA;UAAKY,SAAS,EAAG,qBAAoBH,IAAI,CAACa,MAAO,EAAE;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAEf,IAAI,CAACgB,QAAQ,GAAG;UAAI;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,eACNjB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEJ,IAAI,CAACiB;MAAO;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnDjB,OAAA;QAAKY,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEJ,IAAI,CAACkB;MAAS;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAT9CR,IAAI,CAACC,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA9BID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}